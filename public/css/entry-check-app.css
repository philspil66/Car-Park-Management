html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.clearfix:after{content:" ";display:table;clear:both}@font-face{font-family:icomoon;src:url(../fonts/entry-check-app/icomoon.eot?xct6iu);src:url(../fonts/entry-check-app/icomoon.eot?xct6iu#iefix) format("embedded-opentype"),url(../fonts/entry-check-app/icomoon.ttf?xct6iu) format("truetype"),url(../fonts/entry-check-app/icomoon.woff?xct6iu) format("woff"),url(../fonts/entry-check-app/icomoon.svg?xct6iu#icomoon) format("svg");font-weight:400;font-style:normal}[class*=" icon-"],[class^=icon-]{font-family:icomoon!important;speak:none;font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-search:before{content:"\e036"}.icon-repeat:before{content:"\e058"}.icon-check:before{content:"\e116"}.icon-cross:before{content:"\e117"}.icon-flag:before{content:"\e108"}.search--type a{float:left;width:50%;padding:0 1em;font-size:.75em;box-sizing:border-box;background:#d9272e;color:#fff;text-transform:uppercase;text-align:center;text-decoration:none;line-height:40px}.search--type a:first-child{border-right:1px solid #fff}.search--type a.active i{display:inline-block}.search--type a i{display:none;margin-right:.5em;font-size:1.5em;vertical-align:middle}.search{margin-bottom:1em;position:relative}.search input[type=text]{width:100%;border:none;background:#fc3;font-size:1.5em;font-weight:700;padding:.5em;border:1px solid #c90;text-transform:uppercase;text-decoration:none;text-align:center;border-radius:0;box-sizing:border-box}.search input[type=text]::-webkit-input-placeholder{color:#c90}.search input[type=text]::-moz-placeholder{color:#c90}.search input[type=text]:-ms-input-placeholder{color:#c90}.search input[type=text]::-ms-clear{display:none}.search input:focus{outline:none}.search a.clear-icon{display:none;position:absolute;top:8px;right:3px;cursor:pointer}.search a.clear-icon i{font-size:2em;color:#c90}.search a.clear-icon.show{display:block}.search a.search-icon{position:absolute;top:14px;right:5px}.search a.search-icon i{font-size:1.5em;color:#c90}.search a.search-icon.hide{display:none}.search a.status-icon{display:none;position:absolute;top:15px;left:8px;width:24px;height:24px;background:#cd0000;border-radius:30px}.search a.status-icon.amber{background:#ff751a}.search a.status-icon.green{background:#008a00}.search a.status-icon.show{display:block}.result--basic{margin:0 1em;background:#fff;border-bottom:1px solid #eee}.result--basic .result--basic__column{float:left;width:50%;padding:.5em;box-sizing:border-box;color:#32323a;text-align:center;font-size:.875em}.result--basic .result--basic__column.plate{background:#fc3;font-weight:700}.result--basic:last-child{margin-bottom:1em}.result--advanced{margin:0 1em 1em;background:#fff}.result--advanced .result--advanced__plate{background:#fc3;font-size:1em;font-weight:700;text-align:center;padding:1em;border:1px solid #c90}.result--advanced .result--advanced__detail{border-bottom:1px solid #eee}.result--advanced .result--advanced__detail .result--advanced__detail__left{float:left;width:40%;font-size:.75em;font-weight:700;padding:1em;box-sizing:border-box;text-transform:uppercase;border-right:1px solid #eee}.result--advanced .result--advanced__detail .result--advanced__detail__right{float:left;width:60%;font-size:.75em;padding:1em;box-sizing:border-box}.event--data{position:fixed;bottom:0;width:100%}.event--data a{display:block;background:#d9272e;color:#fff;text-align:center;text-decoration:none;text-transform:uppercase;font-size:.75em;line-height:40px}.event--data a i{font-size:1.5em;vertical-align:middle;margin-right:.5em}.event--data .event--data__details{background:#fff;text-align:center}.event--data .event--data__details .event--data__details__inner{padding:1em}.event--data .event--data__details .event--data__details__name{font-size:.75em;font-weight:700;padding-bottom:.5em;color:#d9272e}.event--data .event--data__details .event--data__details__records{font-size:.75em;color:#32323a}.event--data .event--data__details .event--data__details__records strong{color:#d9272e}.msg{font-size:.75em;text-align:center;padding-bottom:200px}.msg strong{color:#d9272e}body{background:#eee}
/*# sourceMappingURL=data:application/json;base64, */
